{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Google from \"expo-google-app-auth\";\nexport function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var handleGoogleSignIn = function handleGoogleSignIn() {\n    var config = {\n      iosClientId: \"43210928779-2cpp01ggda8uauqkkbuh6dvne9008veq.apps.googleusercontent.com\",\n      androidClientId: \"43210928779-67ummr81diqbv4h722e4bkmniqu0qsmf.apps.googleusercontent.com\",\n      scopes: [\"profile\", \"email\"]\n    };\n    Google.logInAsync(config).then(function (result) {\n      var type = result.type,\n          user = result.user;\n\n      if (type == \"success\") {\n        var email = user.email,\n            name = user.name,\n            photoUrl = user.photoUrl;\n        console.log(\"Signin successfull\");\n        setTimeout(function () {\n          return navigation.navigate(\"Settings\", {\n            email: email,\n            name: name,\n            photoUrl: photoUrl\n          });\n        }, 1000);\n      } else {\n        console.log(\"Siging not successfull\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screen\n  }, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(Button, {\n    title: \"Google SignIn\",\n    onPress: handleGoogleSignIn,\n    style: styles.button,\n    color: \"#808080\"\n  })));\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#282828\"\n  },\n  buttonContainer: {\n    backgroundColor: \"#1ecbe1\"\n  },\n  button: {\n    width: 200,\n    height: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/Student/Documents/estojic/kol2/screens/HomeScreen.js"],"names":["React","useEffect","useState","Google","HomeScreen","route","navigation","handleGoogleSignIn","config","iosClientId","androidClientId","scopes","logInAsync","then","result","type","user","email","name","photoUrl","console","log","setTimeout","navigate","catch","error","styles","screen","buttonContainer","button","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","height"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAUA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAEA,OAAO,SAASC,UAAT,OAA2C;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAChD,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAMC,MAAM,GAAG;AACbC,MAAAA,WAAW,EACT,yEAFW;AAGbC,MAAAA,eAAe,EACb,yEAJW;AAKbC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AALK,KAAf;AAQAR,IAAAA,MAAM,CAACS,UAAP,CAAkBJ,MAAlB,EACGK,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,UAAQC,IAAR,GAAuBD,MAAvB,CAAQC,IAAR;AAAA,UAAcC,IAAd,GAAuBF,MAAvB,CAAcE,IAAd;;AACA,UAAID,IAAI,IAAI,SAAZ,EAAuB;AACrB,YAAQE,KAAR,GAAkCD,IAAlC,CAAQC,KAAR;AAAA,YAAeC,IAAf,GAAkCF,IAAlC,CAAeE,IAAf;AAAA,YAAqBC,QAArB,GAAkCH,IAAlC,CAAqBG,QAArB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAC,QAAAA,UAAU,CACR;AAAA,iBAAMhB,UAAU,CAACiB,QAAX,CAAoB,UAApB,EAAgC;AAAEN,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,IAAI,EAAJA,IAAT;AAAeC,YAAAA,QAAQ,EAARA;AAAf,WAAhC,CAAN;AAAA,SADQ,EAER,IAFQ,CAAV;AAID,OAPD,MAOO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF,KAbH,EAcGG,KAdH,CAcS,UAACC,KAAD,EAAW;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAhBH;AAiBD,GA1BD;;AA4BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAErB,kBAFX;AAGE,IAAA,KAAK,EAAEmB,MAAM,CAACG,MAHhB;AAIE,IAAA,KAAK,EAAE;AAJT,IADF,CADF,CADF;AAYD;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,eAAe,EAAC;AAJV,GADuB;AAO/BP,EAAAA,eAAe,EAAE;AACfO,IAAAA,eAAe,EAAE;AADF,GAPc;AAU/BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,KAAK,EAAE,GADD;AAENC,IAAAA,MAAM,EAAE;AAFF;AAVuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  TextInput,\n  FlatList,\n  Alert,\n} from \"react-native\";\nimport * as Google from \"expo-google-app-auth\";\n\nexport function HomeScreen({ route, navigation }) {\n  const handleGoogleSignIn = () => {\n    const config = {\n      iosClientId:\n        \"43210928779-2cpp01ggda8uauqkkbuh6dvne9008veq.apps.googleusercontent.com\",\n      androidClientId:\n        \"43210928779-67ummr81diqbv4h722e4bkmniqu0qsmf.apps.googleusercontent.com\",\n      scopes: [\"profile\", \"email\"],\n    };\n\n    Google.logInAsync(config)\n      .then((result) => {\n        const { type, user } = result;\n        if (type == \"success\") {\n          const { email, name, photoUrl } = user;\n          console.log(\"Signin successfull\");\n          setTimeout(\n            () => navigation.navigate(\"Settings\", { email, name, photoUrl }),\n            1000\n          );\n        } else {\n          console.log(\"Siging not successfull\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <View style={styles.screen}>\n      <View style={styles.buttonContainer}>\n        <Button\n          title=\"Google SignIn\"\n          onPress={handleGoogleSignIn}\n          style={styles.button}\n          color={\"#808080\"}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor:\"#282828\" \n  },\n  buttonContainer: {\n    backgroundColor: \"#1ecbe1\",\n  },\n  button: {\n    width: 200,\n    height: 200,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}